datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x", "linux-musl-openssl-3.0.x"]
}

model User {
  id           Int     @id @default(autoincrement())
  name         String
  email        String  @unique
  user_id      Int     @unique
  status       Boolean
  cart         Cart[]
  order        Order[]

  @@unique([email, user_id])
}

model Cart {
  id          Int          @id @default(autoincrement())
  user        User         @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
  user_id     Int
  title       String?
  status      Boolean      @default(true)
  total       Int
  default     Boolean      @default(false)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  cart_items  CartItems[]
  order       Order[]
  order_items OrderItems[]
}

model CartItems {
  id               Int          @id @default(autoincrement())
  cart             Cart         @relation(fields: [cart_id], references: [id], onDelete: Cascade)
  cart_id          Int
  product          Product      @relation(fields: [product_id], references: [id], onDelete: Cascade)
  product_id       Int
  product_price    ProductPrice @relation(fields: [product_price_id], references: [id], onDelete: Cascade)
  product_price_id Int
  status           Boolean
  sub_total        Int
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
}

model Product {
  id            Int            @id @default(autoincrement())
  title         String
  description   String?
  qty           Int
  status        Boolean
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  product_price ProductPrice[]
  cart_items    CartItems[]
  order_items   OrderItems[]
}

model ProductPrice {
  id          Int          @id @default(autoincrement())
  product     Product      @relation(fields: [product_id], references: [id], onDelete: Cascade)
  product_id  Int
  price       Int
  status      Boolean
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  cart_items  CartItems[]
  order_items OrderItems[]

  @@unique([product_id, price])
}

model Order {
  id             Int      @id @default(autoincrement())
  cart           Cart     @relation(fields: [cart_id], references: [id])
  cart_id        Int
  cart_data      Json
  user           User     @relation(fields: [user_id], references: [user_id])
  user_id        Int
  user_data      Json
  status         Json
  payment_status Boolean  @default(false)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@unique([cart_id, user_id])
}

model OrderItems {
  id                  Int          @id @default(autoincrement())
  cart                Cart         @relation(fields: [cart_id], references: [id])
  cart_id             Int
  cart_data           Json
  product             Product      @relation(fields: [product_id], references: [id])
  product_id          Int
  product_data        Json
  product_price       ProductPrice @relation(fields: [product_price_id], references: [id])
  product_price_id    Int
  product_price_data  Json
  cart_item_status    Boolean
  cart_item_sub_total Int
  createdAt           DateTime     @default(now())
  updatedAt           DateTime     @updatedAt
}

model Payments {
  id              Int      @id @default(autoincrement())
  order_id        Int
  value           Int
  transaction_id  Int
  status          Json
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

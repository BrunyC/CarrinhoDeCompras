// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x", "linux-musl-openssl-3.0.x"]
}

model User {
  id       Int    @id @default(autoincrement())
  username String @unique
  cpf      String @unique
  cart     Cart[]
}

model Cart {
  id         Int         @id @default(autoincrement())
  user       User        @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    Int
  title      String?
  status     Boolean
  total      Int
  default    Boolean
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  cart_items CartItems[]

  @@unique([user_id, title])
}

model CartItems {
  id               Int          @id @default(autoincrement())
  cart             Cart         @relation(fields: [cart_id], references: [id], onDelete: Cascade)
  cart_id          Int
  product          Product      @relation(fields: [product_id], references: [id], onDelete: Cascade)
  product_id       Int
  product_price    ProductPrice @relation(fields: [product_price_id], references: [id], onDelete: Cascade)
  product_price_id Int
  status           Boolean
  sub_total        Int
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
}

model Product {
  id            Int            @id @default(autoincrement())
  title         String
  status        Boolean
  qty           Int
  product_price ProductPrice[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  cart_items    CartItems[]
}

model ProductPrice {
  id         Int         @id @default(autoincrement())
  product    Product     @relation(fields: [product_id], references: [id], onDelete: Cascade)
  product_id Int
  price      Int
  status     Boolean
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  cart_items CartItems[]
}
